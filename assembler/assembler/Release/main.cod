; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23026.0 

	TITLE	C:\Users\PhonkX\documents\visual studio 2015\Projects\assembler\assembler\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	@__security_check_cookie@4:PROC
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	_main
PUBLIC	?sign2@@YAHH@Z					; sign2
PUBLIC	?sign1@@YAHH@Z					; sign1
; Function compile flags: /Ogtp
; File c:\users\phonkx\documents\visual studio 2015\projects\assembler\assembler\main.cpp
;	COMDAT ?sign2@@YAHH@Z
_TEXT	SEGMENT
?sign2@@YAHH@Z PROC					; sign2, COMDAT
; _x$ = ecx

; 62   : 	if (x > 0)

  00000	85 c9		 test	 ecx, ecx
  00002	7e 06		 jle	 SHORT $LN2@sign2

; 63   : 		return 1;

  00004	b8 01 00 00 00	 mov	 eax, 1

; 65   : 		return -1;
; 66   : 	else return 0;
; 67   : }

  00009	c3		 ret	 0
$LN2@sign2:

; 64   : 	else if (x < 0)

  0000a	33 c0		 xor	 eax, eax
  0000c	85 c9		 test	 ecx, ecx
  0000e	0f 99 c0	 setns	 al
  00011	48		 dec	 eax

; 65   : 		return -1;
; 66   : 	else return 0;
; 67   : }

  00012	c3		 ret	 0
?sign2@@YAHH@Z ENDP					; sign2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\phonkx\documents\visual studio 2015\projects\assembler\assembler\main.cpp
;	COMDAT _main
_TEXT	SEGMENT
_main	PROC						; COMDAT

; 49   : 		mov eax, x

  00000	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH

; 50   : 		cmp eax, 0

  00005	83 f8 00	 cmp	 eax, 0

; 51   : 		je Done

  00008	74 0e		 je	 SHORT $Done$24

; 52   : 		jl L

  0000a	7c 00		 jl	 SHORT $L$25
$L$25:

; 53   : 	L:	mov eax, 1

  0000c	b8 01 00 00 00	 mov	 eax, 1

; 54   : 		jmp Done

  00011	eb 05		 jmp	 SHORT $Done$24

; 55   : 		mov eax, -1

  00013	b8 ff ff ff ff	 mov	 eax, -1
$Done$24:

; 71   : 	/*int k = 7;
; 72   : 	cout << f(k) << endl;
; 73   : 	int a[5] = { 1,2,5,9,10 };
; 74   : 	int n = 5;
; 75   : 	cout << sum(a, n) << endl;*/
; 76   : 	//cout << amin(8, 9, 10) << endl;
; 77   : 	cout << sign1(10) << endl;

  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0001e	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
  0002a	8b c8		 mov	 ecx, eax
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z

; 78   : 	cout << sign2(10) << endl;

  00032	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00038	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  0003d	6a 01		 push	 1
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
  00045	8b c8		 mov	 ecx, eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z

; 79   : 	cout << sign2(0) << endl;

  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00053	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00058	6a 00		 push	 0
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
  00060	8b c8		 mov	 ecx, eax
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z

; 80   : 	cout << sign2(-10) << endl;

  00068	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0006e	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00073	6a ff		 push	 -1
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
  0007b	8b c8		 mov	 ecx, eax
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z

; 81   : 	return 0;

  00083	33 c0		 xor	 eax, eax

; 82   : }

  00085	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
